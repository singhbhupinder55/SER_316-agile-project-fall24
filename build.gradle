
plugins {
    id "com.github.spotbugs" version "5.0.13"
     id "checkstyle"
    id 'pmd'
}

apply plugin: 'jacoco'
apply plugin: 'application'

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    implementation files('cls/')
}

mainClassName = 'Main'

test {
    useJUnitPlatform()
    exclude '**/BlackBoxTest.class'
}

apply plugin: 'checkstyle'
checkstyle {
    toolVersion = "8.8"
    ignoreFailures = true
    showViolations = false
    configFile = file("config/checkstyle/checkstyle.xml") // Ensure this path is correct
}

tasks.withType(Checkstyle) {}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}
jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}
jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

// added code for pmd report

apply plugin: "pmd"
pmd {
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSets = []
    ruleSetConfig = resources.text.fromFile('ruleset.xml')
}


///////////////////////////////////////////////////////////////////////
// Configure SpotBugs
///////////////////////////////////////////////////////////////////////
// To generate an HTML report instead of XML
 spotbugs {
    toolVersion = '4.8.4'
     ignoreFailures = true
    showProgress = true
     effort = 'max'
    reportLevel = 'low'

 }

 tasks.withType(com.github.spotbugs.snom.SpotBugsTask).configureEach {
     reports {
         html.required.set(true)
        xml.required.set(false)
     }
 }



